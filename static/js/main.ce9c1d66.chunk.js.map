{"version":3,"sources":["imgs/back.svg","imgs/next.svg","SearchForm.jsx","Job.jsx","Jobs.jsx","Prev.jsx","Next.jsx","Main.jsx","Description.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchForm","handleSubmit","useState","desc","setDesc","location","setLocation","onSubmit","e","htmlFor","type","id","required","value","onChange","target","withRouter","job","history","className","onClick","push","href","company_url","company","title","Jobs","jobDisplay","jobs","map","key","Prev","prevPage","enabled","src","PrevImg","alt","style","opacity","Next","nextPage","NextImg","Main","page","length","Description","match","selectedJob","find","params","ReactHtmlParser","description","how_to_apply","setJobs","setPage","url","setUrl","preventDefault","fetch","then","res","json","data","catch","err","console","log","exact","path","render","props","Boolean","window","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce9c1d66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.6c9efe0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.be237328.svg\";","import React, { useState } from 'react';\r\nimport './SearchForm.css'\r\n\r\nconst SearchForm = ({handleSubmit}) => {\r\n    const [desc, setDesc] = useState('')\r\n    const [location, setLocation] = useState('')\r\n\r\n    return (\r\n        <form onSubmit={e => handleSubmit(e, desc, location)} >\r\n            <label htmlFor=\"desc\">Search for jobs:</label>\r\n            <input type=\"text\" id='desc' required value={desc} onChange={e => setDesc(e.target.value)} />\r\n\r\n            <label htmlFor=\"location\">Location:</label>\r\n            <input type=\"text\" id='location' required value={location} onChange={e => setLocation(e.target.value)} />\r\n\r\n            <button>Search</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport './Job.css'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst Job = ({job, history}) => {\r\n    return (\r\n        <div className='job' onClick={() => {history.push(`/jobs/${job.id}`)}} >\r\n            <a href={job.company_url} ><h2>{job.company}</h2></a>\r\n            <h3>{job.title}</h3>\r\n            <p>{job.location}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Job);","import React from 'react';\r\nimport Job from './Job'\r\nimport './Jobs.css'\r\n\r\nconst Jobs = ({jobs}) => {\r\n    const jobDisplay = jobs.map(job => <Job key={job.id} job={job} />)\r\n\r\n    return (\r\n        <div className='jobs' >\r\n            {jobDisplay}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jobs;","import React from 'react';\r\nimport PrevImg from './imgs/back.svg'\r\n\r\nconst Prev = ({prevPage, enabled}) => {\r\n    const halfOpacity = {opacity: .5}\r\n    const fullOpacity = {opacity: 1}\r\n    return (\r\n        <div className='img-container' onClick={prevPage} >\r\n            <img src={PrevImg} alt=\"prev\" style={enabled ? fullOpacity : halfOpacity} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Prev;","import React from 'react';\r\nimport NextImg from './imgs/next.svg'\r\n\r\nconst Next = ({nextPage, enabled}) => {\r\n    const halfOpacity = {opacity: .5}\r\n    const fullOpacity = {opacity: 1}\r\n    return (\r\n        <div className='img-container' onClick={nextPage} >\r\n            <img src={NextImg} alt=\"next\" style={enabled ? fullOpacity : halfOpacity} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Next;","import React from 'react';\r\nimport SearchForm from './SearchForm'\r\nimport Jobs from './Jobs'\r\nimport Prev from './Prev'\r\nimport Next from './Next'\r\nimport './Main.css';\r\n\r\nconst apiMaxReturn = 50\r\n\r\nconst Main = ({jobs, handleSubmit, nextPage, prevPage, page}) => {\r\n    return (\r\n        <div className='Main' >\r\n            <SearchForm handleSubmit={handleSubmit} />\r\n\t\t\t{jobs.length > 0 &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='arrows' >\r\n\t\t\t\t\t\t<Prev prevPage={prevPage} enabled={page > 1} />\r\n\t\t\t\t\t\t<Next nextPage={nextPage} enabled={jobs.length === apiMaxReturn} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Jobs jobs={jobs} />\r\n\t\t\t\t\t<div className='arrows' >\r\n\t\t\t\t\t\t<Prev prevPage={prevPage} enabled={page > 1} />\r\n\t\t\t\t\t\t<Next nextPage={nextPage} enabled={jobs.length === apiMaxReturn} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport './Description.css'\r\n\r\nconst Description = ({match, jobs}) => {\r\n    const selectedJob = jobs.find(job => job.id === match.params.id)\r\n    return (\r\n        <div className='Description' >\r\n            {ReactHtmlParser(selectedJob.description)}\r\n            {ReactHtmlParser(selectedJob.how_to_apply)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Description;","import React, { useState } from 'react';\nimport './App.css';\nimport {Switch, Route, withRouter} from 'react-router-dom'\nimport Main from './Main'\nimport Description from './Description'\n\nconst App = ({history}) => {\n\tconst [jobs, setJobs] = useState([])\n\tconst [page, setPage] = useState(1)\n\tconst [url, setUrl] = useState('')\n\n    const handleSubmit = (e, desc, location) => {\n\t\te.preventDefault()\n\t\tfetch(`https://cors-anywhere.herokuapp.com/http://jobs.github.com/positions.json?description=${desc}&location=${location}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tsetJobs(data)\n\t\t\t\tsetUrl(`https://cors-anywhere.herokuapp.com/http://jobs.github.com/positions.json?description=${desc}&location=${location}`)\n\t\t\t\tsetPage(1)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n    }\n\n\tconst nextPage = () => {\n\t\tfetch(`${url}&page=${page+1}`)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tsetJobs(data)\n\t\t\tsetPage(prevPage => prevPage + 1)\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\n\tconst prevPage = () => {\n\t\tfetch(`${url}&page=${page-1}`)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tsetJobs(data)\n\t\t\tsetPage(prevPage => prevPage - 1)\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1 onClick={() => {history.push('/')}} >GitHub Jobs</h1>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/' render={props => (\n\t\t\t\t\t<Main\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tjobs={jobs}\n\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\tnextPage={nextPage}\n\t\t\t\t\t\tprevPage={prevPage}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t/>\n\t\t\t\t)} />\n\t\t\t\t<Route exact path='/jobs/:id' render={props => (\n\t\t\t\t\t<Description {...props} jobs={jobs} />\n\t\t\t\t)} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}